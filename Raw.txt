Среда.	
Крич (отделен от среды для удобства программирования, ЦНС не различает крича и среду): 
	набор сенсоров и эффекторов.
ЦНС.	

Создается среда. 
В неё добавляются кричи. 
Каждому кричу дают ЦНС.

Среда каждый момент времени запрашивает у всех кричей действия.
Крич запрашивает эффекторы у ЦНС.
 ЦНС в первый момент времени предсказывает показания сенсоров крича и реагирует.
 в остальные моменты времени:	
	сверяет показания предикторов и сенсоров. 
		если они различаются 
			!!!
		если нет//
	проверяет состояния целевых сенсоров
	если любопытство доминирует над потребностями - 
		проверяет какие эффекторы не проверены должным образом
		реагирует ими
	иначе реагировать на целевой сенсор
	

Процесс прогнозирования:
У каждого сенсора есть т.н. предикатор. Он прогнозирует показания этого сенсора на следующий момент времени, 
в зависимости от текущего состояния эффекторов секции. Прогноз предикатора коррелируется
данными от других секций.
Или так, у каждого сенсора есть набор предикторов, конкретный из которых выбирается в зависимости от 
данных других секций, и коррелируется ими же.

//////////////////////// 04.08.11
Алгоритм обучения предикаторов.

Сначала ЦНС не выставляет эффекторы. 
Ждёт пока предикторы не начнут стабильно прогнозировать спокойное состояние. (ждёт до какого-то момента)
Затем берет случайный эффектор и изменяет его, например, на 10%. 
Вообще он запоминает какие эффекторы он на сколько выставлял, чтобы перебрать их полностью с каким-то шагом.
После того как изменил эффектор на 10%, ЦНС смотрит - какие сенсоры изменились, 
 и соединяет эффектор и сенсор связью. Теперь предиктор при прогнозе учитывает эту связь.


///////////////////////
 Попробывал сформулировать задачу более узко.
Дано 24 сенсора и 16 эффекторов. Они условно поделены на 6 секций. 
В двух секциях сенсоры перемешаны, что бы посмотреть, как ЦНС будет выкручиваться в таком случае.

Жук с 4 ногами:  
1. сенсор расстояния до ближайшей пищи 
2. сенсор угла поворота до ближайшей пищи
3. целевым сенсор голода
4. сенсор усталости

Каждая нога (их четыре - т.е. сенсоров х4) отдельная секция, состоящая из набора
5-8 сенсор верхнего угла ноги 
9-12 сенсор нижнего угла ноги 
13-16 сенсор левого угла ноги 
17-20 сенсор правого угла ноги 
21-24 сенсор касания ногой земли
итого 24 сенсора

первый эффектор горизонтальной мышцы 
второй эффектор горизонтальной мышщы
первый эффектор вертикальной мышцы 
второй эффектор вертикальной мышщы
итого 16 эффекторов

К каждому сенсору ЦНС пристраивает предиктор. 
Задача, запрограммировать и натренировать предикторы, что-бы они делали как минимум прогноз на один момент времени (на один кадр сознания) вперед. 
Каждый момент времени значения всех сенсоров и эффекторов записывается в память. Предиктор имеет доступ к памяти на произвольную глубину.
Каждый предиктор может просить ЦНС выставить эффекторы нужным ему образом. 
Наверное ЦНС будет следовать просьбам одного предиктора, до тех пор пока он не "прощупает" ныжные ему для прогнозирования эффекторы. 
Остальные предикторы в это время пытаются обучаться на тех значениях эффекторов, которые есть, и ждут своей очереди.
Предиктор может и должен находить зависимости от эффекторов на сенсоры: прямые зависимости, логарифмические, степенные, тригонометрические, составные и проч. Если предиктор не может найти зависимость - то хотя бы составить таблицу значение/функция. 
ПОка узко задача стоит так.

UPD
Алгоритм обучения предикаторов.

Сначала ЦНС не выставляет эффекторы. 
Ждёт пока предикторы не начнут стабильно прогнозировать спокойное состояние. (ждёт до какого-то момента)
Затем берет случайный эффектор и изменяет его, например, на 10%. 
Вообще он запоминает какие эффекторы он на сколько выставлял, чтобы перебрать их полностью с каким-то шагом.
После того как изменил эффектор на 10%, ЦНС смотрит - какие сенсоры изменились, 
 и соединяет эффектор и сенсор связью. Теперь предиктор при прогнозе учитывает эту связь.

Алгоритм поведения
Как только ЦНС сможет достаточно хорошо строить прогноз (или раньше) 
он, теперь уже зная, как эффеторы влияют на целевой сенсор (в данном случае сенсор голода)
начинает строить деревья действий, отметая заведомо ошибочные. 
Строит, прогоняя эти ветви по "виртуальному конвейеру прогнозирования", 
 строи прогноз в глубину на столько шагов, сколько предусмотрено планом действий.

Затем он начинает реально выпольнять ветви, которые приводят к положительному влиянию на целевой сенсор,
 корректируя план по необходимости.
 
При несовпадении прогноза ЦНС соединяет те эффекторы которые изменились и те сенсоры, которые оказались непредсказанными

